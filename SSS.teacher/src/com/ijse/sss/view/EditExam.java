/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.sss.view;

import com.ijse.sss.connector.ServerConnector;
import com.ijse.sss.controller.ExamController;
import com.ijse.sss.controller.NoteController;
import com.ijse.sss.controller.QuestionController;
import com.ijse.sss.controller.StudentController;
import com.ijse.sss.model.Exam;
import com.ijse.sss.model.Question;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NEOx
 */
public class EditExam extends javax.swing.JFrame {

    /**
     * Creates new form EditExam
     */
    private String exName;
    private String date;
    private String time;
    private String duration;
    private String examCode;
    private String[] modules;
    private String[] qIds;
    private String selectedQid;
    private TeacherMain teacherMain;
    private ArrayList<Question> moduledQuestions;
    ArrayList<Exam> moduledExam;
    private DefaultTableModel defaultTableModel;
    private ArrayList<Exam> allQs = new ArrayList<>();

    public EditExam(TeacherMain teacherMain) {
        initComponents();
        this.teacherMain = teacherMain;
        autoDateTime();
        addModules();
    }

    private void autoDateTime() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date time = new Date();
                    Date date = new Date();
                    String curTime = new SimpleDateFormat("hh:mm aa").format(time);
                    String curDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
                    lblTime.setText(curTime);
                    lblDate.setText(curDate);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();

    }

    private void addModules() {
        try {
            jLabel26.setVisible(false);
            jRadioButton1.setVisible(false);
            jRadioButton2.setVisible(false);
            jRadioButton3.setVisible(false);
            jRadioButton4.setVisible(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
            jLabel27.setVisible(false);
            jButton5.setEnabled(false);
            ExamController examController = ServerConnector.getServerConnector().getExamController();
            ArrayList<String> modules = examController.getAllExamModules();

            for (String module : modules) {
                txtModule.addItem(module);
                txtModule1.addItem(module);
            }

        } catch (RemoteException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);

        } catch (NotBoundException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);

        } catch (MalformedURLException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ParseException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtExamCode = new javax.swing.JTextField();
        txtModule1 = new javax.swing.JComboBox<>();
        txtExamName = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstQst = new javax.swing.JList<>();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cbMinutes1 = new javax.swing.JComboBox<>();
        cbHours1 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbAmPm = new javax.swing.JComboBox<>();
        cbMinutes = new javax.swing.JComboBox<>();
        cbHours = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtDate = new datechooser.beans.DateChooserCombo();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtModule = new javax.swing.JComboBox<>();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBackgrond = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Exam Code");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, 270, 100));

        jLabel35.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText(":");
        jPanel1.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 30, 100));

        txtExamCode.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        txtExamCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExamCodeActionPerformed(evt);
            }
        });
        txtExamCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtExamCodeKeyReleased(evt);
            }
        });
        jPanel1.add(txtExamCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 510, 290, 40));

        txtModule1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        txtModule1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtModule1ItemStateChanged(evt);
            }
        });
        jPanel1.add(txtModule1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 190, 40));

        txtExamName.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        txtExamName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtExamNameItemStateChanged(evt);
            }
        });
        jPanel1.add(txtExamName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 350, 40));

        jLabel26.setFont(new java.awt.Font("Microsoft Himalaya", 1, 40)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("No. of Questions to add  :");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 890, 450, 50));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/cancelSmall.jpg"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1560, 960, 140, 60));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/changeSmall.jpg"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1720, 960, 140, 60));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/add.jpg"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1730, 860, 140, 60));

        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("Answer 4");
        jRadioButton3.setOpaque(false);
        jPanel1.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 820, 330, 40));

        jRadioButton4.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("Answer 3");
        jRadioButton4.setOpaque(false);
        jPanel1.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 820, 330, 40));

        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Answer 2");
        jRadioButton2.setOpaque(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 770, 330, 40));

        jRadioButton1.setBackground(new java.awt.Color(51, 153, 0));
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Answer 1");
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 770, 330, 40));

        jLabel27.setBackground(new java.awt.Color(51, 153, 0));
        jLabel27.setOpaque(true);
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 770, 330, 40));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 550, 910, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/moveDown.jpg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1740, 430, 140, 60));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/moveUp.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1740, 330, 140, 60));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/remove.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1740, 230, 140, 60));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Question ID", "Question", "Module"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 210, 770, 290));

        lstQst.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        lstQst.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstQst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstQstMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstQst);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 670, 850, 350));

        jSpinner1.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, 90, 40));

        jLabel23.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Questions");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 240, 100));

        jLabel24.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText(":");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 430, 30, 100));

        jLabel22.setFont(new java.awt.Font("Microsoft Himalaya", 1, 40)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Minutes");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 390, 120, 50));

        cbMinutes1.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        cbMinutes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jPanel1.add(cbMinutes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 90, 40));

        cbHours1.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        cbHours1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cbHours1.setToolTipText("");
        jPanel1.add(cbHours1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 390, 90, 40));

        jLabel21.setFont(new java.awt.Font("Microsoft Himalaya", 1, 40)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Hours");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 90, 50));

        jLabel20.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText(":");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 30, 110));

        jLabel19.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Duration");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 240, 110));

        cbAmPm.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        cbAmPm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        jPanel1.add(cbAmPm, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 90, 40));

        cbMinutes.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        cbMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jPanel1.add(cbMinutes, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 90, 40));

        cbHours.setFont(new java.awt.Font("Microsoft Himalaya", 0, 40)); // NOI18N
        cbHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jPanel1.add(cbHours, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, 90, 40));

        jLabel17.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Time");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 270, 80));

        jLabel18.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 30, 100));

        txtDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    txtDate.setCalendarPreferredSize(new java.awt.Dimension(361, 209));
    txtDate.setFormat(2);
    txtDate.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
    txtDate.setFieldFont(new java.awt.Font("Microsoft Himalaya", java.awt.Font.PLAIN, 40));
    jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 540, 40));

    jLabel15.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
    jLabel15.setForeground(new java.awt.Color(255, 255, 255));
    jLabel15.setText("Date");
    jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 270, 100));

    jLabel16.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
    jLabel16.setForeground(new java.awt.Color(255, 255, 255));
    jLabel16.setText(":");
    jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 250, 30, 100));

    txtModule.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
    txtModule.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            txtModuleItemStateChanged(evt);
        }
    });
    jPanel1.add(txtModule, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 600, 560, 50));

    lblDate.setFont(new java.awt.Font("Microsoft Himalaya", 1, 80)); // NOI18N
    lblDate.setForeground(new java.awt.Color(255, 255, 255));
    lblDate.setText("08:00");
    jPanel1.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1570, 100, 310, 90));

    lblTime.setFont(new java.awt.Font("Microsoft Himalaya", 1, 100)); // NOI18N
    lblTime.setForeground(new java.awt.Color(255, 255, 255));
    lblTime.setText("08:00");
    jPanel1.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1550, 40, 330, 90));

    jLabel1.setFont(new java.awt.Font("Microsoft Himalaya", 3, 100)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(255, 255, 255));
    jLabel1.setText("EDIT EXAM");
    jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 800, 110));

    jLabel5.setFont(new java.awt.Font("Microsoft Himalaya", 1, 50)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(255, 255, 255));
    jLabel5.setText("Module Name");
    jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 590, 260, 70));

    jLabel6.setFont(new java.awt.Font("Microsoft Himalaya", 1, 60)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 255, 255));
    jLabel6.setText(":");
    jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 580, 30, 100));

    jLabel4.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setText(":");
    jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 30, 100));

    jLabel3.setFont(new java.awt.Font("Microsoft Himalaya", 1, 55)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setText("Exam Name");
    jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 270, 100));

    jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 530, 950, 410));

    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 950, 950, 80));

    jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 900, 450));

    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 190, 950, 330));

    jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 190, 950, 330));

    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 900, 380));

    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1860, 150));

    jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 900, 380));

    jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1860, 150));

    jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 950, 950, 80));

    jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 530, 950, 410));

    jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
    jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 900, 450));

    jLabel2.setFont(new java.awt.Font("Microsoft Himalaya", 3, 80)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(204, 204, 255));
    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/technology-1106438_960_720darky.jpg"))); // NOI18N
    jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255), 4));
    jLabel2.setPreferredSize(new java.awt.Dimension(1920, 1000));
    jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1880, 1020));

    lblBackgrond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/technology-1106438_960_720darky.jpg"))); // NOI18N
    jPanel1.add(lblBackgrond, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

    jLabel13.setFont(new java.awt.Font("Microsoft Himalaya", 1, 60)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setText("Exam Name");
    jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 270, 100));

    jLabel14.setFont(new java.awt.Font("Microsoft Himalaya", 1, 60)); // NOI18N
    jLabel14.setForeground(new java.awt.Color(255, 255, 255));
    jLabel14.setText(":");
    jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 30, 100));

    getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new ExamForm(teacherMain).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String timeIsS = (String) cbHours1.getSelectedItem() + (String) cbMinutes1.getSelectedItem();
        int timeIs = Integer.parseInt(timeIsS);

        if (timeIs >= 10 && !txtExamCode.getText().equals("")) {
            try {
                exName = (String) txtExamName.getSelectedItem();
                String eid = "";
                for (Exam exam : moduledExam) {
                    if (exam.getExamName().equals(exName)) {
                        eid = exam.getEid();
                    }
                }

                examCode = txtExamCode.getText();
                date = txtDate.getText();
                time = (String) cbHours.getSelectedItem() + ":" + (String) cbMinutes.getSelectedItem() + ":" + (String) cbAmPm.getSelectedItem();
                duration = (String) cbHours1.getSelectedItem() + ":" + (String) cbMinutes1.getSelectedItem();
                qIds = new String[jTable1.getRowCount()];
                ArrayList<String> moduleList = new ArrayList<>();

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    moduleList.add((String) jTable1.getValueAt(i, 2));
                }
                moduleList = removeDuplicates(moduleList);
                String exModules = "";
                modules = new String[moduleList.size()];
                for (int i = 0; i < moduleList.size(); i++) {
                    modules[i] = moduleList.get(i);
                    exModules += moduleList.get(i);
                }

                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    qIds[i] = (String) jTable1.getValueAt(i, 0);
                }

                Exam exam = new Exam(eid, exName, modules, qIds, date, time, duration, examCode);
                ExamController examController = ServerConnector.getServerConnector().getExamController();
                boolean isUpdated = examController.updateExam(exam);

                if (isUpdated) {
                    JOptionPane.showMessageDialog(this, "Exam Changed SuccessFully....");
                    StudentController studentController = ServerConnector.getServerConnector().getStudentController();
                    String newTopic = "\" " + exName + " : " + exModules + "\"";
                    studentController.previewNotification("A Exam Changed.." + newTopic + "...");
                    new ExamForm(teacherMain).setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Exam Changed Failed....");

                }
            } catch (RemoteException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (NotBoundException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (MalformedURLException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (IOException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);

            } catch (ParseException ex) {
                Logger.getLogger(EditExam.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Time must be at least 10 Minutes....");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        boolean isCan = true;
        for (int i = 0; i < defaultTableModel.getRowCount(); i++) {
            if (selectedQid.equalsIgnoreCase((String) jTable1.getValueAt(i, 0))) {
                isCan = false;
                break;
            }
        }

        if (isCan) {
            for (Question moduledQuestion : moduledQuestions) {
                if (moduledQuestion.getQid().equals(selectedQid)) {
                    String[] row = {selectedQid, moduledQuestion.getQuestion(), moduledQuestion.getModule()};
                    defaultTableModel.addRow(row);

                    int spinnerValue = (int) jSpinner1.getValue();
                    int tableValue = jTable1.getRowCount();

                    if ((spinnerValue - tableValue) > 0) {
                        jLabel26.setText("No. of Questions to add  : " + (spinnerValue - tableValue));
                    } else if ((spinnerValue - tableValue) == 0) {
                        jLabel26.setText("All Question Added....");
                        jButton4.setEnabled(false);
                        jButton5.setEnabled(true);
                    }
                    jLabel26.setVisible(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "This Question is already Added....");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        defaultTableModel.moveRow(selectedRow, selectedRow, (selectedRow + 1));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        defaultTableModel.moveRow(selectedRow, selectedRow, (selectedRow - 1));

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        defaultTableModel.removeRow(jTable1.getSelectedRow());
        int spinnerValue = (int) jSpinner1.getValue();
        int tableValue = jTable1.getRowCount();

        if ((spinnerValue - tableValue) > 0) {
            jLabel26.setText("No. of Questions to add  : " + (spinnerValue - tableValue));
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton5.setEnabled(false);
        } else if ((spinnerValue - tableValue) == 0) {
            jLabel26.setText("All Question Added....");
            jButton4.setEnabled(false);
            jButton5.setEnabled(true);
        } else {
            jLabel26.setText("Please remove " + (-(spinnerValue - tableValue)) + " Questions....");
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
        jLabel26.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            jButton4.setEnabled(false);
            if (jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()) == null) {
                jButton1.setEnabled(false);
                jButton2.setEnabled(false);
                jButton3.setEnabled(false);
            } else {
                jButton1.setEnabled(true);
                jButton2.setEnabled(true);
                jButton3.setEnabled(true);
            }
            String selQid = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            QuestionController questionController = ServerConnector.getServerConnector().getQuestionController();
            ArrayList<Question> readAllQuestions = questionController.readAllQuestions();
            for (Question readQuestion : readAllQuestions) {
                if (readQuestion.getQid().equals(selQid)) {
                    jTextArea1.setText(readQuestion.getQuestion());
                    jRadioButton1.setText(readQuestion.getCorrectAnswer());
                    jRadioButton2.setText(readQuestion.getAnswer1());
                    jRadioButton3.setText(readQuestion.getAnswer2());
                    jRadioButton4.setText(readQuestion.getAnswer3());

                    jRadioButton1.setVisible(true);
                    jRadioButton2.setVisible(true);
                    jRadioButton3.setVisible(true);
                    jRadioButton4.setVisible(true);
                }
            }

        } catch (RemoteException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void lstQstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstQstMouseClicked
        if (txtExamName.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Fill All the Fields....");
        } else {
            String question = lstQst.getSelectedValue();
            showQuestion(question);
            jLabel27.setVisible(true);
        }

        int spinnerValue = (int) jSpinner1.getValue();
        int tableValue = jTable1.getRowCount();

        if ((spinnerValue - tableValue) > 0) {
            jButton4.setEnabled(true);
        } else {
            jButton4.setEnabled(false);
        }
    }//GEN-LAST:event_lstQstMouseClicked

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        int spinnerValue = (int) jSpinner1.getValue();
        int tableValue = jTable1.getRowCount();

        if ((spinnerValue - tableValue) > 0) {
            jLabel26.setText("No. of Questions to add  : " + (spinnerValue - tableValue));
            jButton4.setEnabled(true);
            jButton5.setEnabled(false);
        } else if ((spinnerValue - tableValue) == 0) {
            jLabel26.setText("All Question Added....");
            jButton4.setEnabled(false);
            jButton5.setEnabled(true);
        } else {
            jLabel26.setText("Please remove " + (-(spinnerValue - tableValue)) + " Questions....");
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
        jLabel26.setVisible(true);
    }//GEN-LAST:event_jSpinner1StateChanged

    private void txtModuleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtModuleItemStateChanged
        try {
            QuestionController questionController = ServerConnector.getServerConnector().getQuestionController();
            moduledQuestions = questionController.readQuestionsModule((String) txtModule.getSelectedItem());

            DefaultListModel<String> defaultListModel = new DefaultListModel<>();
            lstQst.setModel(defaultListModel);
            defaultListModel.removeAllElements();

            for (Question question : moduledQuestions) {
                defaultListModel.addElement(question.getQuestion());
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(AddExam.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtModuleItemStateChanged

    private void txtExamNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtExamNameItemStateChanged

        for (Exam exam : moduledExam) {
            if (true) {
                if (exam.getExamName().equals(txtExamName.getSelectedItem())) {
                    try {
                        String[] time = exam.getTime().split(":");
                        String[] duration = exam.getDuration().split(":");
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);
                        this.defaultTableModel = dtm;
                        QuestionController questionController = ServerConnector.getServerConnector().getQuestionController();
                        ArrayList<Question> readAllQuestions = questionController.readAllQuestions();
                        for (int i = 0; i < exam.getQuestions().length; i++) {
                            for (Question readQuestion : readAllQuestions) {
                                if (readQuestion.getQid().equals(exam.getQuestions()[i])) {
                                    Object[] row = {readQuestion.getQid(), readQuestion.getQuestion(), readQuestion.getModule()};
                                    dtm.addRow(row);
                                }
                            }
                        }

                        txtDate.setText(exam.getDate());
                        cbHours.setSelectedItem(time[0]);
                        cbMinutes.setSelectedItem(time[1]);
                        cbAmPm.setSelectedItem(time[2]);
                        cbHours1.setSelectedItem(duration[0]);
                        cbMinutes1.setSelectedItem(duration[1]);
                        jSpinner1.setValue(exam.getQuestions().length);
                        txtExamCode.setText(exam.getExamCode());
                        jButton5.setEnabled(false);
                    } catch (IOException ex) {
                        Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (NotBoundException ex) {
                        Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_txtExamNameItemStateChanged

    private void txtModule1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtModule1ItemStateChanged
        try {
            ExamController examController = ServerConnector.getServerConnector().getExamController();
            moduledExam = examController.getModuledExam((String) txtModule1.getSelectedItem());
            txtExamName.removeAllItems();

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date curDate = dateFormat.parse(lblDate.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("MMM dd,yyyy");
            for (Exam exam : moduledExam) {
                Date examDate = sdf.parse(exam.getDate());
                long diff = examDate.getTime() - curDate.getTime();
                int diffDays = (int) (diff / (24 * 60 * 60 * 1000));

                if (diffDays >= 0) {
                    txtExamName.addItem(exam.getExamName());
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(EditExam.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (NotBoundException ex) {
            Logger.getLogger(EditExam.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (MalformedURLException ex) {
            Logger.getLogger(EditExam.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EditExam.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtModule1ItemStateChanged

    private void txtExamCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExamCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExamCodeActionPerformed

    private void txtExamCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExamCodeKeyReleased

    }//GEN-LAST:event_txtExamCodeKeyReleased

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbAmPm;
    private javax.swing.JComboBox<String> cbHours;
    private javax.swing.JComboBox<String> cbHours1;
    private javax.swing.JComboBox<String> cbMinutes;
    private javax.swing.JComboBox<String> cbMinutes1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblBackgrond;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JList<String> lstQst;
    private datechooser.beans.DateChooserCombo txtDate;
    private javax.swing.JTextField txtExamCode;
    private javax.swing.JComboBox<String> txtExamName;
    private javax.swing.JComboBox<String> txtModule;
    private javax.swing.JComboBox<String> txtModule1;
    // End of variables declaration//GEN-END:variables
    private void showQuestion(String question) {
        for (Question moduledQuestion : moduledQuestions) {
            if (moduledQuestion.getQuestion().equals(question)) {
                jTextArea1.setText(moduledQuestion.getQuestion());
                jRadioButton1.setText(moduledQuestion.getCorrectAnswer());
                jRadioButton2.setText(moduledQuestion.getAnswer1());
                jRadioButton3.setText(moduledQuestion.getAnswer2());
                jRadioButton4.setText(moduledQuestion.getAnswer3());

                jRadioButton1.setVisible(true);
                jRadioButton2.setVisible(true);
                jRadioButton3.setVisible(true);
                jRadioButton4.setVisible(true);

                selectedQid = moduledQuestion.getQid();
            }
        }
    }

    private ArrayList<String> removeDuplicates(ArrayList<String> allModules) {
        int count = allModules.size();
        for (int i = 0; i < count; i++) {
            for (int j = i + 1; j < count; j++) {
                if (allModules.get(i).equals(allModules.get(j))) {
                    allModules.remove(j--);
                    count--;
                }
            }
        }
        return allModules;
    }
}
