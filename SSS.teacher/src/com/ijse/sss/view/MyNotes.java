/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.sss.view;

import com.ijse.sss.connector.ServerConnector;
import com.ijse.sss.controller.MyNoteController;
import com.ijse.sss.model.MyNote;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author NEOx
 */
public class MyNotes extends javax.swing.JFrame {

    /**
     * Creates new form MyNotes
     */
    private TeacherMain teacherMain;
    private HashMap<String, String> topics;
    private String selectedMid;
    private int count = 1;

    public MyNotes(TeacherMain teacherMain) {
        initComponents();
        this.teacherMain = teacherMain;
        autoDateTime();
        addTopics();
    }

    private void autoDateTime() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date time = new Date();
                    Date date = new Date();
                    String curTime = new SimpleDateFormat("hh:mm aa").format(time);
                    String curDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
                    lblTime.setText(curTime);
                    lblDate.setText(curDate);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();
    }

    private void addTopics() {
        jButton7.setVisible(false);
        jButton8.setVisible(false);
        jButton9.setVisible(false);
        jButton10.setVisible(false);
        try {
            MyNoteController myNoteController = ServerConnector.getServerConnector().getMyNoteController();
            topics = myNoteController.getMyNotesTopics(teacherMain.getTitle(), "Teacher");
            DefaultListModel<String> defaultListModel = new DefaultListModel<>();
            lstModule.setModel(defaultListModel);
            defaultListModel.removeAllElements();
            if (!topics.isEmpty()) {
                for (Map.Entry<String, String> entry : topics.entrySet()) {
                    defaultListModel.addElement(entry.getValue());
                }
            } else {
                JOptionPane.showMessageDialog(this, "No Notes to Show....");
            }

        } catch (RemoteException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        txtMyNoteTopic = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        btBackToNote1 = new javax.swing.JButton();
        lblsadas = new javax.swing.JLabel();
        lblwroteByDate = new javax.swing.JLabel();
        btBackToNote = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        lblModule = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstModule = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBackgrond = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/deletebt.jpg"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 960, 190, 60));

        txtMyNoteTopic.setEditable(false);
        txtMyNoteTopic.setFont(new java.awt.Font("Microsoft Himalaya", 0, 50)); // NOI18N
        txtMyNoteTopic.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMyNoteTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMyNoteTopicActionPerformed(evt);
            }
        });
        jPanel7.add(txtMyNoteTopic, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 230, 770, 50));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/edit.jpg"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 960, 140, 60));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/cancelSmall.jpg"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 960, 140, 60));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/save.jpg"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 960, 140, 60));

        btBackToNote1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/createNewNote.jpg"))); // NOI18N
        btBackToNote1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btBackToNote1MousePressed(evt);
            }
        });
        btBackToNote1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackToNote1ActionPerformed(evt);
            }
        });
        jPanel7.add(btBackToNote1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 920, 360, 100));

        lblsadas.setFont(new java.awt.Font("Microsoft Himalaya", 1, 40)); // NOI18N
        lblsadas.setForeground(new java.awt.Color(255, 255, 255));
        lblsadas.setText("Date  :");
        jPanel7.add(lblsadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 960, 100, 70));

        lblwroteByDate.setFont(new java.awt.Font("Microsoft Himalaya", 1, 40)); // NOI18N
        lblwroteByDate.setForeground(new java.awt.Color(255, 255, 255));
        lblwroteByDate.setText("Wrote By  :");
        jPanel7.add(lblwroteByDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 960, 390, 70));

        btBackToNote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/btBackToHome.jpg"))); // NOI18N
        btBackToNote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btBackToNoteMousePressed(evt);
            }
        });
        btBackToNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackToNoteActionPerformed(evt);
            }
        });
        jPanel7.add(btBackToNote, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 960, 290, 60));

        txtNote.setEditable(false);
        txtNote.setColumns(20);
        txtNote.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        txtNote.setRows(5);
        jScrollPane1.setViewportView(txtNote);

        jPanel7.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, 1190, 620));

        lblModule.setFont(new java.awt.Font("Microsoft Himalaya", 1, 70)); // NOI18N
        lblModule.setForeground(new java.awt.Color(255, 255, 255));
        lblModule.setText("Topics");
        jPanel7.add(lblModule, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 240, 60));

        lstModule.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lstModule.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstModule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstModuleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lstModuleMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lstModuleMousePressed(evt);
            }
        });
        lstModule.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstModuleValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstModule);

        jPanel7.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 560, 610));

        jLabel3.setFont(new java.awt.Font("Microsoft Himalaya", 1, 100)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MY NOTES");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 500, 90));

        lblTime.setFont(new java.awt.Font("Microsoft Himalaya", 1, 100)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setText("08:00");
        jPanel7.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1560, 50, 330, 90));

        lblDate.setFont(new java.awt.Font("Microsoft Himalaya", 1, 80)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDate.setText("08:00");
        jPanel7.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1580, 120, 310, 90));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 950, 1250, 80));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 600, 820));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, 1250, 730));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1860, 170));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1860, 170));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 600, 820));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, 1250, 730));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/blackTransparent.png"))); // NOI18N
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 950, 1250, 80));

        jLabel2.setFont(new java.awt.Font("Microsoft Himalaya", 3, 80)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/white transparent.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255), 4));
        jLabel2.setPreferredSize(new java.awt.Dimension(1920, 1000));
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1880, 1020));

        lblBackgrond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/sss/images/technology-1106438_960_720darky.jpg"))); // NOI18N
        jPanel7.add(lblBackgrond, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btBackToNoteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBackToNoteMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btBackToNoteMousePressed

    private void btBackToNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackToNoteActionPerformed
        teacherMain.show();
        this.dispose();
    }//GEN-LAST:event_btBackToNoteActionPerformed

    private void lstModuleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstModuleMouseClicked
        if (lstModule.getSelectedValue() != null) {
            jButton9.setVisible(true);
            jButton10.setVisible(true);
            previewMyNote();
        }
    }//GEN-LAST:event_lstModuleMouseClicked

    private void lstModuleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstModuleMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lstModuleMouseEntered

    private void lstModuleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstModuleMousePressed

    }//GEN-LAST:event_lstModuleMousePressed

    private void lstModuleValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstModuleValueChanged

    }//GEN-LAST:event_lstModuleValueChanged

    private void btBackToNote1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBackToNote1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btBackToNote1MousePressed

    private void btBackToNote1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackToNote1ActionPerformed
        count = 2;
        txtMyNoteTopic.setEditable(true);
        txtNote.setEditable(true);
        txtMyNoteTopic.setText("");
        lblwroteByDate.setText(lblDate.getText());
        txtNote.setText("");
        jButton7.setVisible(true);
        jButton8.setVisible(true);
        jButton9.setVisible(false);
        jButton10.setVisible(false);
    }//GEN-LAST:event_btBackToNote1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (count == 2) {
            jButton9.setVisible(false);
            jButton10.setVisible(false);
        } else {
            jButton9.setVisible(true);
            jButton10.setVisible(true);
        }
        jButton7.setVisible(false);
        jButton8.setVisible(false);
        txtMyNoteTopic.setEditable(false);
        txtNote.setEditable(false);
        count = 1;
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String desc = txtNote.getText();
        String date = lblDate.getText();
        String userName = teacherMain.getTitle();
        String topic = txtMyNoteTopic.getText();

        MyNote myNote = new MyNote(selectedMid, topic, desc, userName, date, "Teacher");

        try {
            MyNoteController myNoteController = ServerConnector.getServerConnector().getMyNoteController();
            if (count == 1) {
                boolean isUpdated = myNoteController.updateMyNote(myNote);

                if (isUpdated) {
                    JOptionPane.showMessageDialog(this, "Note Updated Successfully....");
                    jButton8.setVisible(false);
                    jButton7.setVisible(false);
                    jButton9.setVisible(true);
                    jButton10.setVisible(true);
                    txtMyNoteTopic.setEditable(false);
                    txtNote.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Note Updated Failed....");
                }
            } else {
                boolean isWritten = myNoteController.writeMyNote(myNote);

                if (isWritten) {
                    JOptionPane.showMessageDialog(this, "Note Added Successfully....");
                    txtMyNoteTopic.setEditable(false);
                    txtNote.setEditable(false);
                    addTopics();
                } else {
                    JOptionPane.showMessageDialog(this, "Note Added Failed....");
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        txtNote.setEditable(true);
        jButton9.setVisible(false);
        jButton10.setVisible(false);
        jButton7.setVisible(true);
        jButton8.setVisible(true);
        txtMyNoteTopic.setEditable(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txtMyNoteTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMyNoteTopicActionPerformed

    }//GEN-LAST:event_txtMyNoteTopicActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "Are You sure You want to Delete..??");

        if (res == 0) {
            try {
                MyNoteController myNoteController = ServerConnector.getServerConnector().getMyNoteController();
                boolean isDeleted = myNoteController.deleteMyNote(selectedMid);

                if (isDeleted) {
                    JOptionPane.showMessageDialog(this, "Note Deletion Failed....");
                } else {
                    JOptionPane.showMessageDialog(this, "Note Deleted Successfully....");
                    addTopics();
                    txtMyNoteTopic.setText("");
                    txtNote.setText("");
                    jButton10.setVisible(false);
                    jButton9.setVisible(false);
                }

            } catch (IOException ex) {
                Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotBoundException ex) {
                Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBackToNote;
    private javax.swing.JButton btBackToNote1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBackgrond;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblModule;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblsadas;
    private javax.swing.JLabel lblwroteByDate;
    private javax.swing.JList<String> lstModule;
    private javax.swing.JTextField txtMyNoteTopic;
    private javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables
    private void previewMyNote() {
        String selectedTopic = lstModule.getSelectedValue();

        for (Map.Entry<String, String> entry : topics.entrySet()) {
            if (entry.getValue().equals(selectedTopic)) {
                selectedMid = entry.getKey();
            }
        }

        try {
            MyNoteController myNoteController = ServerConnector.getServerConnector().getMyNoteController();
            MyNote searchMyNote = myNoteController.searchMyNote(selectedMid);

            txtNote.setText(searchMyNote.getDesc());
            txtMyNoteTopic.setText(searchMyNote.getTopic());
            lblwroteByDate.setText(searchMyNote.getDate());
        } catch (IOException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MyNotes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
